- name: install kubelet kubectl kubeadm
  yum:
    name: "{{ item }}"
    state: present
    enablerepo: local-base
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: replace kubelet extra
  replace:
    path: /etc/sysconfig/kubelet
    regexp: 'KUBELET_EXTRA_ARGS=.*'
    replace: 'KUBELET_EXTRA_ARGS="--cgroup-driver=systemd"'

- name: enable kubelet
  service:
    name: kubelet
    enabled: true

- name: reset kubeadm environment
  shell: kubeadm reset -f

- name: deploy kubeadm master
  include_tasks: kubeadm_master_deploy.yml
  when: ansible_facts['default_ipv4']['address'] == special_roles.k8s_master_1

- name: work node join
  shell: kubeadm join {{ urls.kubeadm.url }}:6443 --token {{ hostvars[special_roles.k8s_master_1]["kubeadm_token"].stdout }} --discovery-token-ca-cert-hash sha256:{{ hostvars[special_roles.k8s_master_1]["ca_cert_hash"].stdout }}
  when:  '"node" in hostname[ansible_facts["default_ipv4"]["address"]]'

- name: control node join
  shell: kubeadm join {{ urls.kubeadm.url }}:6443 --token {{ hostvars[special_roles.k8s_master_1]["kubeadm_token"].stdout }} --discovery-token-ca-cert-hash sha256:{{ hostvars[special_roles.k8s_master_1]["ca_cert_hash"].stdout }} --control-plane --certificate-key {{ hostvars[special_roles.k8s_master_1]["certificate_key"].stdout }}
  when: '"master" in hostname[ansible_facts["default_ipv4"]["address"]] and ansible_facts["default_ipv4"]["address"] != special_roles.k8s_master_1'

# todo 通过 "kubectl -n kube-system get po|grep -Evc "Running|NAME" 检查集群状态
- name: wait for master setup done
  wait_for: port=6443 delay=30 timeout=100
  when: '"master" in hostname[ansible_facts["default_ipv4"]["address"]] and ansible_facts["default_ipv4"]["address"] != special_roles.k8s_master_1'

- name: apply metric and treafik
  include_tasks: metric_treafik.yml







